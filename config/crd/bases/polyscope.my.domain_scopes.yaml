---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: scopes.polyscope.my.domain
spec:
  group: polyscope.my.domain
  names:
    kind: Scope
    listKind: ScopeList
    plural: scopes
    singular: scope
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Scope is the Schema for the scopes API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ScopeSpec defines the desired state of Scope.
            properties:
              namespaceselectionspec:
                properties:
                  forLabels:
                    description: |-
                      A label selector is a label query over a set of resources. The result of matchLabels and
                      matchExpressions are ANDed. An empty label selector matches all objects. A null
                      label selector matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  forName:
                    items:
                      type: string
                    type: array
                type: object
              roleSpec:
                description: Foo is an example field of Scope. Edit scope_types.go
                  to remove/update
                properties:
                  fromExist:
                    properties:
                      roleName:
                        type: string
                      roleNamespace:
                        type: string
                    required:
                    - roleName
                    type: object
                  fromTemplate:
                    properties:
                      roleTemplate:
                        description: Role is a namespaced, logical grouping of PolicyRules
                          that can be referenced as a unit by a RoleBinding.
                        properties:
                          apiVersion:
                            description: |-
                              APIVersion defines the versioned schema of this representation of an object.
                              Servers should convert recognized schemas to the latest internal value, and
                              may reject unrecognized values.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                            type: string
                          kind:
                            description: |-
                              Kind is a string value representing the REST resource this object represents.
                              Servers may infer this from the endpoint the client submits requests to.
                              Cannot be updated.
                              In CamelCase.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          metadata:
                            description: Standard object's metadata.
                            type: object
                          rules:
                            description: Rules holds all the PolicyRules for this
                              Role
                            items:
                              description: |-
                                PolicyRule holds information that describes a policy rule, but does not contain information
                                about who the rule applies to or which namespace the rule applies to.
                              properties:
                                apiGroups:
                                  description: |-
                                    APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                                    the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                nonResourceURLs:
                                  description: |-
                                    NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                                    Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                                    Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                resourceNames:
                                  description: ResourceNames is an optional white
                                    list of names that the rule applies to.  An empty
                                    set means that everything is allowed.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                resources:
                                  description: Resources is a list of resources this
                                    rule applies to. '*' represents all resources.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                verbs:
                                  description: Verbs is a list of Verbs that apply
                                    to ALL the ResourceKinds contained in this rule.
                                    '*' represents all verbs.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                              - verbs
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                    required:
                    - roleTemplate
                    type: object
                type: object
              subjectspec:
                properties:
                  saName:
                    type: string
                  saTemplate:
                    description: |-
                      ServiceAccount binds together:
                      * a name, understood by users, and perhaps by peripheral systems, for an identity
                      * a principal that can be authenticated and authorized
                      * a set of secrets
                    properties:
                      apiVersion:
                        description: |-
                          APIVersion defines the versioned schema of this representation of an object.
                          Servers should convert recognized schemas to the latest internal value, and
                          may reject unrecognized values.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                        type: string
                      automountServiceAccountToken:
                        description: |-
                          AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted.
                          Can be overridden at the pod level.
                        type: boolean
                      imagePullSecrets:
                        description: |-
                          ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images
                          in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets
                          can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet.
                          More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
                        items:
                          description: |-
                            LocalObjectReference contains enough information to let you locate the
                            referenced object inside the same namespace.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                        x-kubernetes-list-type: atomic
                      kind:
                        description: |-
                          Kind is a string value representing the REST resource this object represents.
                          Servers may infer this from the endpoint the client submits requests to.
                          Cannot be updated.
                          In CamelCase.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      metadata:
                        description: |-
                          Standard object's metadata.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                        type: object
                      secrets:
                        description: |-
                          Secrets is a list of the secrets in the same namespace that pods running using this ServiceAccount are allowed to use.
                          Pods are only limited to this list if this service account has a "kubernetes.io/enforce-mountable-secrets" annotation set to "true".
                          The "kubernetes.io/enforce-mountable-secrets" annotation is deprecated since v1.32.
                          Prefer separate namespaces to isolate access to mounted secrets.
                          This field should not be used to find auto-generated service account token secrets for use outside of pods.
                          Instead, tokens can be requested directly using the TokenRequest API, or service account token secrets can be manually created.
                          More info: https://kubernetes.io/docs/concepts/configuration/secret
                        items:
                          description: ObjectReference contains enough information
                            to let you inspect or modify the referred object.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    type: object
                type: object
              timeToLive:
                type: string
            required:
            - namespaceselectionspec
            - roleSpec
            - subjectspec
            type: object
          status:
            description: ScopeStatus defines the observed state of Scope.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
